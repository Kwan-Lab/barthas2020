function plot_days_scatter(val,subj_info,params)
% % plot_days_scatter %
%PURPOSE:   Plot behavioral performance, comparing two days with a scatter
%           plot
%AUTHORS:   AC Kwan 200116

%INPUT ARGUMENTS
%   val:          Vector of the values to be plotted across days
%   subj_info:    Structure generated by groupbysuject().
%   params:       Plotting parameters

%%
col=[1 0 1];

%% organize data based on subjects
valbySubj = nan(max(subj_info.subjectID),max(subj_info.acqdate));
for j=1:size(val,1)
    valbySubj(subj_info.subjectID(j),subj_info.acqdate(j))=val(j);
end

%% plot as a function of day per subject
figure;

%number of conditions (e.g., control, susceptible, resilient)
if isfield(subj_info,'subjClassif') %split into susceptible/resilient
    subjCond = subj_info.subjClassif;
    subjCondLabel = subj_info.classiflabel;
else
    subjCond = subj_info.subjCond;
    subjCondLabel = subj_info.condlabel;
end
condList = unique(subjCond);
nCond = numel(condList);

dat = [];
for j=1:nCond
    
    %% plot trend line over days
    subplot(2,3,j); hold on;
    
    %plot the expectation (diagonal line)
    minVal = min([params.xrange params.yrange]);
    maxVal = max([params.xrange params.yrange]);
    plot([minVal maxVal],[minVal maxVal],'k--','LineWidth',2);
    
    %only include data if there are valid values for days specified in params.daysForBarPlot
    temp=[];
    for ll=1:numel(params.daysForBarPlot)
        temp(:,ll) = nanmean(valbySubj(subjCond==condList(j),params.daysForBarPlot{ll}),2);   %arrange across the specified days
    end
    nanInRows = sum(isnan(temp),2)>0;  %any subject with missing data
    temp = temp(~nanInRows,:);         %remove subjects with missing data
    
    % scatter plot
    plot(temp(:,1),temp(:,2),'o','Color',col,'MarkerSize',10,'LineWidth',2);
    
    % mean +- sem
    x=nanmean(temp(:,1));
    xsem=nanstd(temp(:,1))/sqrt(sum(~isnan(temp(:,1))));
    y=nanmean(temp(:,2));
    ysem=nanstd(temp(:,2))/sqrt(sum(~isnan(temp(:,2))));
    plot(x*[1 1],y+ysem*[-1 1],'k-','LineWidth',3);
    plot(x+xsem*[-1 1],y*[1 1],'k-','LineWidth',3);
    
    dat{j} = temp; %saves data to do stats later
    
    xlim(params.xrange);
    ylim(params.yrange);
    xlabel(params.xtitle);
    if j==1
        ylabel(params.ytitle);
    end
    title([subjCondLabel{j} ' (n = ' int2str(size(temp,1)) ')']);
end

%% test correlation coefficient!

for j=1:nCond
    [r,p]=corrcoef(dat{j}(:,1),dat{j}(:,2));
    var1=nanvar(dat{j}(:,1));
    var2=nanvar(dat{j}(:,2));
    disp([subjCondLabel{j} ': correlation coeff=' num2str(r(1,2)) '; p=' num2str(p(1,2))]);
    disp([subjCondLabel{j} ': var(x)=' num2str(var1) '; var(y)=' num2str(var2)]);
end

end



