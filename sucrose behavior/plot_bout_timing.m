function plot_bout_timing(input,plotparams)
% % plot_bout_timing %
%PURPOSE:   Plot results of bout timing analysis
%AUTHORS:   AC Kwan 170609
%
%INPUT ARGUMENTS
%   input:        Structure generated by bout_timing().
%   plotparams:   Parameters to do with how to plot
%       tlabel:       Text to put as title of the plot
%       colors:       Colors assocaited with the reinforcement types
%       xtitle:       Text to put as label of x-axis
%       xrange:       Range of x-axis for plotting purposes
%       yrange:       Range of y-axis for plotting purposes

%%
if numel(input)>1  %more than 1 data set, plot mean+-sem
    sepType=input{1}.sepType;
    edges=input{1}.edges;
    cdfedges=input{1}.cdfedges;
    
    for j=1:numel(input)
        cdfByType(:,:,j)=input{j}.cdfByType;
        t50(:,j)=input{j}.t50;
        t2080(:,j)=input{j}.t80-input{j}.t20;
    end
    cdfByType = nanmean(cdfByType,3);
else        %plot the 1 data set
    sepType=input.sepType;
    edges=input.edges;
    cdfedges=input.cdfedges;

    cdfByType=input.cdfByType;
    t50=input.t50;
    t2080=input.t80-input.t20;
end

edges=edges(1:end-1)+nanmean(diff(edges))/2;   %plot using the center of the histogram bins

if isfield(plotparams,'xrange')
    xrange = plotparams.xrange;
else
    xrange = [edges(1) edges(end)];
end

if isfield(plotparams,'yrange')
    yrange = plotparams.yrange;
else
    %y-axis range depends on data range, but at least from 0 to 1
    yrange=[min([floor(nanmin([t50(:) t2080(:)])) 0]) max([ceil(nanmax([t50(:) t2080(:)])) 1])];
end

%% plot
figure;

%% panels with breakdown by type

for l=1:4
    if l==1
        temp=t50;
        ytitle={'t_{50} (s)'};
        panels=[1 2];
    elseif l==2
        temp=t2080;
        ytitle={'t_{80} - t_{20} (s)'};
        panels=[4 5];
    elseif l==3
        temp=100*t50./repmat(t50(1,:),size(t50,1),1);  %as a percentage from water block
        ytitle={'t_{50} (%)'};
        panels=[6 7];
    elseif l==4
        temp=100*t2080./repmat(t2080(1,:),size(t2080,1),1);  %as a percentage from water block
        ytitle={'t_{80} - t_{20} (%)'};
        panels=[9 10];
    end
    
    subplot(2,5,panels); hold on;
    
    for kk=1:numel(sepType)
        %plot individual data point
        for jj=1:size(temp,2)
            randx=rand*0.3-0.15;
            plot(kk+randx,temp(kk,jj),'o','Color',plotparams.gray,'MarkerSize',10,'LineWidth',2);
        end
        
        %plot mean
        bar(kk,nanmean(temp(kk,:)),0.5,'EdgeColor',plotparams.colors{kk},'LineWidth',3,'FaceColor','none');
        plot([kk kk],nanmean(temp(kk,:))+nanstd(temp(kk,:))/sqrt(numel(temp(kk,:)))*[-1 1],'Color',plotparams.colors{kk},'LineWidth',3);    
    end    
    
    xlim([0.5 4.5]);
    if l==1 || l==2
        ylim(yrange);
    else
        plot([0.5 4.5],[100 100],'k--','LineWidth',2);
        ylim([50 255]);
    end
    xlabel('Block type');
    ylabel(ytitle);
    set(gca,'XTickLabel',sepType,'xtick',1:1:numel(sepType));
    
    %% anova test
    if l==3
        subj=[]; rtype=[];
        for ii=1:size(temp,1)          %reward type
            for jj=1:size(temp,2)      %subject
                rtype(ii,jj)=ii;
                subj(ii,jj)=jj;
            end
        end
        
        dat = temp(:);
        rtype = rtype(:);
        subj=subj(:);
            
        disp(strcat('One-way ANOVA: ', plotparams.xtitle));
        [p,tab,stats] = anovan(dat,{rtype,subj},'random',2,'varnames',{'Reward type','Subject'},'display','off');
        tab
        [c,m,h,nms] = multcompare(stats,'Dimension',[1],'display','off');
        c
    end
    
end

end


